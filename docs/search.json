[{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://covid19br.github.io/nowcaster/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://covid19br.github.io/nowcaster/articles/forecasting.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Forecasting","text":"Nowcasting estimation events already started yet reported. epidemiology, events like cases onset first symptoms yet captured notification system. Forecasting simply estimation events, yet started onset first symptoms, .e. cases probable incubation period. data structure databases basically cases date onset greater present date. language delay triangle, forecasting estimate part completely unobserved.","code":""},{"path":"https://covid19br.github.io/nowcaster/articles/forecasting.html","id":"parameter-k-0","dir":"Articles","previous_headings":"","what":"Parameter K > 0","title":"Forecasting","text":"nowcasting_inla function functional parameter flags model parsed inla construct delay triangle dates greater present date. done setting K parameter value greater 0, like $K = 1,2,3, $. proceed example nowcasting. forecasting done nowcasting article Nowcasting decision making. First, cut lazydata loaded namespace package date interest, details cut date see article Nowcasting decision making. parse nowcasting_inla function date onset date report columns, flag returning data.frame cases counts week setting K parameter desired forecasting horizon, forecast one week ahead present date. forecasting, construct case counts curve lazydata, using internal function data.w_no_age, construct curve summarizing case counts date onset first symptoms present database.  Now, forecast one week ahead just flag K = 1, proceed normal nowcasting calling, code : visualize forecast plot observed curve nowcasting forecasting estimate, change colors part. plot together nowcasting forecasting estimate, curve observed one year later, validate estimate done.","code":"library(tidyverse) library(lubridate) library(nowcaster)  ## To see Nowcasting as if we were on the verge of rise in the curve data(\"sragBH\") srag_now<-sragBH |>    filter(DT_DIGITA <= \"2020-07-04\")  data_by_week<-data.w_no_age(dataset = srag_now,                               date_onset = DT_SIN_PRI,                               date_report = DT_DIGITA,                               K = 0) |>    group_by(date_onset) |>    tally()  data_by_week |>     ggplot(aes(x = date_onset,               y = n))+   geom_line()+   theme_bw()+   labs(x = 'Date of onset of symptons',         y = 'Nº Cases')+   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks') nowcasting_bh_no_age <- nowcasting_inla(dataset = srag_now,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T,                                          K = 1) head(nowcasting_bh_no_age$data) #> # A tibble: 6 × 3 #> # Groups:   date_onset [1] #>   date_onset observed Delay #>   <date>        <int> <dbl> #> 1 2019-12-28       21     6 #> 2 2019-12-28       21     1 #> 3 2019-12-28       21     2 #> 4 2019-12-28       21     3 #> 5 2019-12-28       21     3 #> 6 2019-12-28       21    18 ## Nowcasting estimate filtering nowcasting_estimate<-nowcasting_bh_no_age$total |>    filter(dt_event <= \"2020-06-27\") ## Forecasting estimate filtering forecasting_estimate<-nowcasting_bh_no_age$total |>    filter(dt_event >= \"2020-06-27\")  ## One year after observed data_one_year_after<-sragBH %>%   filter(DT_SIN_PRI <= \"2020-07-16\") %>%    mutate(     D_SIN_PRI_2 = DT_SIN_PRI - as.numeric(format(DT_SIN_PRI, \"%w\"))   ) %>%    group_by(D_SIN_PRI_2) %>%    tally()   ## Plotting nowcasting_estimate |>    ggplot(aes(x = dt_event, y = Median, col = \"Nowcasting\"))+   geom_line()+   geom_ribbon(aes(ymin = LI, ymax = LS, col = \"Nowcasting\", fill = \"Nowcasting\"),                alpha = 0.2,                show.legend = F)+   geom_line(data = forecasting_estimate,              aes(x = dt_event, y = Median, col = \"Forecasting\"))+   geom_ribbon(data = forecasting_estimate,                aes(ymin = LI, ymax = LS, col = \"Forecasting\", fill = \"Forecasting\"),                alpha = 0.2,               show.legend = F)+   geom_line(data = data_by_week,              aes(date_onset, y = n, col = 'Observed'))+   geom_line(data = data_one_year_after,              mapping = aes(x = D_SIN_PRI_2, y = n,                            color = \"Observed after one year\")) +    theme_bw() +   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('orange','grey50', 'black', 'red'),                       name = '')+   scale_fill_manual(values = c('orange','grey50'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/forecasting.html","id":"uncertainty-growth","dir":"Articles","previous_headings":"","what":"Uncertainty growth","title":"Forecasting","text":"try forecasting longer ahead present date, uncertainty grow. saw opening confidence intervals last graph. Although wide realized curve still falls inside , indicating assertative tendency curve least. can taken support decision making planning ahead present date. forecasting horizon 1 week ahead, confidence interval wider , help little can try forecasting imposed structured data. Now, forecasting parsing columns age nowcasting function, can reduce opening confidence interval. plot nowcasting estimate forecasting estimate :","code":"nowcasting_bh_age <- nowcasting_inla(dataset = srag_now,                                       date_onset = DT_SIN_PRI,                                       date_report = DT_DIGITA,                                       data.by.week = T,                                       K = 1,                                      age_col = Idade) head(nowcasting_bh_age$data) #> # A tibble: 6 × 3 #> # Groups:   date_onset [1] #>   date_onset observed Delay #>   <date>        <int> <dbl> #> 1 2019-12-28       21     6 #> 2 2019-12-28       21     1 #> 3 2019-12-28       21     2 #> 4 2019-12-28       21     3 #> 5 2019-12-28       21     3 #> 6 2019-12-28       21    18 ## Nowcasting estimate filtering nowcasting_estimate<-nowcasting_bh_age$total |>    filter(dt_event <= \"2020-06-27\") ## Forecasting estimate filtering forecasting_estimate<-nowcasting_bh_age$total |>    filter(dt_event >= \"2020-06-27\")  ## Plotting nowcasting_estimate |>    ggplot(aes(x = dt_event, y = Median, col = \"Nowcasting\"))+   geom_line()+   geom_ribbon(aes(ymin = LI, ymax = LS, col = \"Nowcasting\", fill = \"Nowcasting\"),                alpha = 0.2,                show.legend = F)+   geom_line(data = forecasting_estimate,              aes(x = dt_event, y = Median, col = \"Forecasting\"))+   geom_ribbon(data = forecasting_estimate,                aes(ymin = LI, ymax = LS, col = \"Forecasting\", fill = \"Forecasting\"),                alpha = 0.2,               show.legend = F)+   geom_line(data = data_by_week,              aes(date_onset, y = n, col = 'Observed'))+   geom_line(data = data_one_year_after,              mapping = aes(x = D_SIN_PRI_2, y = n,                            color = \"Observed after one year\")) +    theme_bw() +   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('orange','grey50', 'black', 'red'),                       name = '')+   scale_fill_manual(values = c('orange','grey50'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/nowcaster.html","id":"first-example-on-lazydata","dir":"Articles","previous_headings":"","what":"First example on LazyData","title":"Get Started","text":"package loaded provides LazyData file, sariBH, anonymized records Severe Acute Respiratory Illness notified city Belo Horizonte, since March 2020 April 2022. load basically write: take look data: data.frame 7 variables 65,404 observations. make use first two columns, “DT_SIN_PRI” (date onset symptoms) “DT_DIGITA” (recording date) well column “Idade” (age years) make age structured nowcasting. call function straightforward, simply needs dataset input, LazyData loaded namespace package. function 3 mandatory parameters, dataset parsing dataset nowcasted, date_onset parsing column name date onset symptoms date_report parses column name date report cases. columns “DT_SIN_PRI” “DT_DIGITA”, respectively. calling return first element nowcasting estimate Confidence Interval (CI) two different Credible interval, LIb LSb max min CI, respectively, credibility 50% LI LS max min CI, respectively, credibility 95%. second element returns data grouped summarized give epidemic curve, can take look element.  element groped summarized onset symptoms date, DT_SIN_PRI, epidemiological curve observed. example estimate compares observed curve, plot estimate epidemiological curve together.  example estimate done without considering type structure data, first assumption nowcasting.","code":"library(nowcaster) # Loading Belo Horizonte SARI dataset data(sragBH) head(sragBH) #>   DT_SIN_PRI  DT_DIGITA CLASSI_FIN EVOLUCAO CO_MUN_RES Idade fx_etaria #> 1 2020-02-11 2020-03-05          4        1     310620    59   50 - 59 #> 2 2020-01-21 2020-02-06          4        1     310620    79   70 - 79 #> 3 2020-03-30 2020-04-17          4        1     310620    72   70 - 79 #> 4 2020-03-26 2020-04-02          4        1     310620    82      80 + #> 5 2020-03-20 2020-04-13          4        1     310620    50   50 - 59 #> 6 2020-04-07 2020-04-22          5        1     310620    74   70 - 79 nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,                                          date_onset = \"DT_SIN_PRI\",                                          date_report = \"DT_DIGITA\",                                          data.by.week = T) head(nowcasting_bh_no_age$total) #> # A tibble: 6 × 7 #>    Time dt_event   Median    LI    LS   LIb   LSb #>   <int> <date>      <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    17 2021-12-13    625   621  632   623   627  #> 2    18 2021-12-20    695   687  707   692   699  #> 3    19 2021-12-27    812   800  829   807   817  #> 4    20 2022-01-03    886   872  909   880   893  #> 5    21 2022-01-10    818   800  845.  811   826. #> 6    22 2022-01-17    631   610  662   623.  640 library(ggplot2) library(dplyr)  dados_by_week <- nowcasting_bh_no_age$data |>    ungroup() |>    dplyr::filter(date_onset >= max(date_onset)-270)  dados_by_week |>    ggplot()+   geom_line(data = dados_by_week,              aes(date_onset,                  y = observed,                  col = 'Observed'))+   theme_bw()+   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases') nowcasting_bh_no_age$total |>    ggplot(aes(x = dt_event, y = Median,               col = 'Nowcasting')) +   geom_line(data = dados_by_week,              aes(date_onset,                  y = observed,                  col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line()+   theme_bw()+   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/nowcasting_importance.html","id":"nowcasting-as-a-tool-to-support-decision-making","dir":"Articles","previous_headings":"","what":"Nowcasting as a tool to support decision making","title":"Nowcasting for decision making","text":"Nowcasting rising curve curve moment can give quantitative support decision making, public health crises, needed way anticipate, least, happening moment. Nowcasting tool type questioning can gives insights data support needed decisions. start section cutting original data moment apparent decaying SARI hospitalisation, city Belo Horizonte, prompt starting response Covid=19 pandemic. pressure health system took time rest country, data time showing decay. filter cases entered 4th July 2020 date digitisation, date cases shows database.  filtered data, estimate cases already started date onset symptoms yet reported, database. just pass nowcasting_inla function, dataset filtered, flag columns date_onset date_report, add flag function return back epidemic curve epiweek. see result nowcasting estimate take look intermediate part process nowcasting, delay triangle, sets objects nowcasting. delay triangle table unique amount delay, (.e. integer numbers days weeks) passed date onset date report spread date onset. part closer present less counts lower amount delay, trivial due , system takes time process cases, newer cases lesser older ones, already time processed. data weekly format mount counts cases amount delay. tabling delay amount data onset first symptoms, see pattern delay cases. just look amount cases 30 weeks delay less, default maximum delay considered nowcasting estimation. can changed parameter Dmax. element grouped summarized onset symptoms date, DT_SIN_PRI, epidemiological curve observed. example , plot estimate epidemiological curve together.  expected, nowcasting estimated rising curve observed decaying. Adding plot actually happened period, data inserted posteriorly period nowcasting estimated rising curve SARI hospitalizations.  end first simple example estimating already started events yet reported (.e. nowcasting). relevance nowcasting public health decision given understanding present databases picture real time situation. graph can help policy makers decisions takes face rising curve hospitalisations.","code":"library(tidyverse) library(lubridate) library(nowcaster)  ## To see Nowcasting as if we were on the verge of rise in the curve data(\"sragBH\") srag_now<-sragBH |>    filter(DT_DIGITA <= \"2020-07-04\")  data_by_week<-data.w_no_age(dataset = srag_now,                           date_onset = DT_SIN_PRI,                           date_report = DT_DIGITA) |>    group_by(date_onset) |>    tally()  data_by_week |>     ggplot(aes(x = date_onset,               y = n))+   geom_line()+   theme_bw()+   labs(x = 'Date of onset of symptons',         y = 'Nº Cases')+   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks') nowcasting_bh_no_age <- nowcasting_inla(dataset = srag_now,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T) head(nowcasting_bh_no_age$data) #> # A tibble: 6 × 3 #> # Groups:   date_onset [1] #>   date_onset observed Delay #>   <date>        <int> <dbl> #> 1 2019-12-28       21     6 #> 2 2019-12-28       21     1 #> 3 2019-12-28       21     2 #> 4 2019-12-28       21     3 #> 5 2019-12-28       21     3 #> 6 2019-12-28       21    18 data_triangle <- nowcasting_bh_no_age$data |>    ungroup() |>    filter(Delay < 30, date_onset >= max(date_onset) - 270) |>    arrange(Delay)  delay_triangle<-table(data_triangle$date_onset,                        data_triangle$Delay,                       dnn = list(\"Date of Onset\", \"Delay\")) delay_triangle #>              Delay #> Date of Onset   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 #>    2019-12-28   1   2   4   5   2   2   2   0   0   0   0   0   0   0   0   0 #>    2020-01-04   0   1   4   5   5   2   0   0   0   2   0   0   0   0   0   0 #>    2020-01-11   1   5   6   4   1   2   0   0   1   0   0   0   0   0   0   0 #>    2020-01-18   2   3   6   9   2   0   3   1   0   1   0   0   0   0   0   0 #>    2020-01-25   0   6   3   2   1   1   1   0   0   2   0   0   1   0   0   0 #>    2020-02-01   1   3   5   1   3   4   2   0   1   0   0   0   0   0   0   0 #>    2020-02-08   0   5   3   5   0   3   1   4   0   0   0   0   0   1   0   0 #>    2020-02-15   0   2   7   1   1   4   2   2   1   1   0   0   1   0   0   0 #>    2020-02-22   1   6   4   7   6   7   0   2   1   1   5   1   0   0   0   0 #>    2020-02-29   2   3   5   8   9   4   1   2   2   1   1   1   0   2   4   1 #>    2020-03-07   2   9  24  30  17  13   6   6   7   5   6   3   4   0   0   1 #>    2020-03-14   5  45 109  25  36  30  13  23  21   9   8   6   3   3   2   1 #>    2020-03-21   7 120  48  52  19  18  23  17  17   6  10   3   5   4   2   0 #>    2020-03-28  23  76  70  18  27  20  16  15  11   6   2   2   3   1   0   0 #>    2020-04-04  15 103  38  25  24   8  10   8   5   4   7   1   1   0   0   0 #>    2020-04-11  24  79  63  30  23  21   7  12   3   4   0   3   0   0   0   0 #>    2020-04-18  17 111  80  22  15  10  16   3   5   5   1   0   0   0   0   0 #>    2020-04-25  22 143  51  26  17  16   4  12   7   4   0   0   0   0   0   0 #>    2020-05-02  39 106  87  24   9   5   8   6   1   0   0   0   0   0   0   0 #>    2020-05-09  37 154  68  32   8  12  10  10   0   0   0   0   0   0   0   0 #>    2020-05-16  31 153  80  20  22  15  17   0   0   0   0   0   0   0   0   0 #>    2020-05-23  41 154  70  67  24  15   0   0   0   0   0   0   0   0   0   0 #>    2020-05-30  34 174 191  98  35   0   0   0   0   0   0   0   0   0   0   0 #>    2020-06-06  22 240 232  62   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-06-13  44 355 252   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-06-20  61 363   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-06-27  84   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>              Delay #> Date of Onset  16  17  18  19  20 #>    2019-12-28   0   1   2   0   0 #>    2020-01-04   0   0   1   0   0 #>    2020-01-11   0   0   0   0   0 #>    2020-01-18   0   0   0   0   0 #>    2020-01-25   0   0   0   1   0 #>    2020-02-01   0   0   0   0   0 #>    2020-02-08   0   0   0   0   1 #>    2020-02-15   0   0   0   0   0 #>    2020-02-22   0   0   0   0   0 #>    2020-02-29   0   0   0   0   0 #>    2020-03-07   1   0   0   0   0 #>    2020-03-14   0   0   0   0   0 #>    2020-03-21   0   0   0   0   0 #>    2020-03-28   0   0   0   0   0 #>    2020-04-04   0   0   0   0   0 #>    2020-04-11   0   0   0   0   0 #>    2020-04-18   0   0   0   0   0 #>    2020-04-25   0   0   0   0   0 #>    2020-05-02   0   0   0   0   0 #>    2020-05-09   0   0   0   0   0 #>    2020-05-16   0   0   0   0   0 #>    2020-05-23   0   0   0   0   0 #>    2020-05-30   0   0   0   0   0 #>    2020-06-06   0   0   0   0   0 #>    2020-06-13   0   0   0   0   0 #>    2020-06-20   0   0   0   0   0 #>    2020-06-27   0   0   0   0   0 library(ggplot2)  dados_by_week <- nowcasting_bh_no_age$data  nowcasting_bh_no_age$total |>    ggplot(aes(x = dt_event, y = Median,               col = 'Nowcasting')) +   geom_line(data = dados_by_week,              aes(date_onset, y = observed,                  col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line()+   theme_bw()+   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases') nowcasting_bh_no_age$total %>%    ggplot(aes(x = dt_event, y = Median, col = 'Nowcasting')) +   geom_line(data = dados_by_week,              aes(date_onset, y = observed, col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA),                alpha = 0.2,                show.legend = F)+   geom_line()+   geom_line( data = sragBH %>%                filter(DT_SIN_PRI <= \"2020-07-04\") %>%                 mutate(                  D_SIN_PRI_2 = DT_SIN_PRI - as.numeric(format(DT_SIN_PRI, \"%w\"))                ) %>%                 group_by(D_SIN_PRI_2) %>%                 tally(),               mapping = aes(x = D_SIN_PRI_2, y = n,                             color = \"Observed after one year\")) +    theme_bw() +   theme(legend.position = \"bottom\",          axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black', 'red'),                       name = '')+   scale_x_date(date_breaks = '2 weeks',                 date_labels = '%V/%y',                 name = 'Date in Weeks')+   labs(x = '',         y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/structured_data.html","id":"non-structured-data","dir":"Articles","previous_headings":"","what":"Non-structured data","title":"Structured data","text":"Th Get Started example non-strucutured data estimation, give detailed description type data can change nowcasting estimation. Now call nowcasting function, default parametrization take data estimate non-structured data form. estimate fits negative binomial distribution, \\(NegBinom(\\lambda_{t,d}, \\phi)\\), cases count time \\(t\\) delay \\(d\\), \\(\\phi\\) dispersion parameter. rate \\(\\lambda_{t,d}\\) parameterized log-linear format constant term added structured delay random effects structured time random effects. Hence, model given following: \\[\\begin{equation} Y_{t,d} \\sim NegBinom(\\lambda_{t,d}, \\phi), \\\\ \\log(\\lambda_{t,d}) = \\alpha + \\beta_t + \\gamma_d, \\\\ t=1,2,\\ldots,T, \\\\ d=1,2,\\ldots,D, \\end{equation}\\] intercept \\(\\alpha\\) follows Gaussian distribution large variance, \\(\\beta_t\\) follows second order random walk precision \\(\\tau_\\beta\\), \\(\\gamma_d\\) first-order random walk precision \\(\\tau_\\gamma\\). model completed INLA default prior distributions \\(\\phi\\), \\(\\tau_\\beta\\), \\(\\tau_\\gamma\\). See nbinom, rw1 rw2 INLA help pages. call function straightforward, simply needs dataset input, LazyData loaded namespace package. function 3 mandatory parameters, dataset parsing dataset nowcasted, date_onset parsing column name date onset symptoms date_report parses column name date report cases. columns “DT_SIN_PRI” “DT_DIGITA”, respectively. calling return nowcasting estimate Confidence Interval (CI) two different Credible interval, LIb LSb max min CI, respectively, credibility 50% LI LS max min CI, respectively, credibility 95%. nowcasting_inla option return curve nowcasting estimate set window action model, data..week parameter flagged TRUE returns second element output list summarized data week. element counts cases amount delay. known delay triangle, table delay amount data onset first symptoms, can see pattern delay cases. just look amount cases 30 weeks delay less, default maximum delay considered nowcasting estimation. element groped summarized onset symptoms date, DT_SIN_PRI, epidemiological curve observed. example , plot estimate epidemiological curve together.","code":"nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA) head(nowcasting_bh_no_age$total) #> # A tibble: 6 × 7 #>    Time dt_event   Median    LI    LS   LIb   LSb #>   <int> <date>      <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    17 2021-12-13    625   621   633   623  627  #> 2    18 2021-12-20    695   687   707   692  698. #> 3    19 2021-12-27    812   800   830   807  818  #> 4    20 2022-01-03    886   872   907   881  893  #> 5    21 2022-01-10    818   799   845   811  826  #> 6    22 2022-01-17    631   610   659   623  640 nowcasting_bh_no_age <- nowcasting_inla(dataset = sragBH,                                          date_onset = DT_SIN_PRI,                                          date_report = DT_DIGITA,                                          data.by.week = T) head(nowcasting_bh_no_age$data) #> # A tibble: 6 × 3 #> # Groups:   date_onset [1] #>   date_onset observed Delay #>   <date>        <int> <dbl> #> 1 2019-12-23       22     6 #> 2 2019-12-23       22     1 #> 3 2019-12-23       22     2 #> 4 2019-12-23       22     3 #> 5 2019-12-23       22    53 #> 6 2019-12-23       22     3 library(dplyr)  data_triangle <- nowcasting_bh_no_age$data |>    filter(Delay < 30) |>    arrange(Delay)  delay_triangle<-table(data_triangle$date_onset,                        data_triangle$Delay,                       dnn = list(\"Date of Onset\", \"Delay\")) delay_triangle #>              Delay #> Date of Onset   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 #>    2019-12-23   1   2   4   5   2   2   2   0   0   0   0   0   0   0   0   0 #>    2019-12-30   0   1   4   5   5   2   0   0   0   2   0   0   0   0   0   0 #>    2020-01-06   1   5   6   4   1   2   0   0   1   0   0   0   0   0   0   0 #>    2020-01-13   2   3   6   9   2   0   3   1   0   1   0   0   0   0   0   0 #>    2020-01-20   0   6   3   2   1   1   1   0   0   2   0   0   1   0   0   0 #>    2020-01-27   1   3   5   1   3   4   2   0   1   0   0   0   0   0   0   0 #>    2020-02-03   0   5   3   5   0   3   1   4   0   0   0   0   0   1   0   0 #>    2020-02-10   0   2   7   1   1   4   2   2   1   1   0   0   1   0   0   0 #>    2020-02-17   1   6   4   7   6   7   0   2   1   1   5   1   0   0   0   0 #>    2020-02-24   2   3   5   8   9   4   1   2   2   1   1   1   0   2   4   1 #>    2020-03-02   2   9  24  30  17  13   6   6   7   5   6   3   4   0   0   1 #>    2020-03-09   5  45 109  25  36  30  13  23  21   9   8   6   3   3   2   1 #>    2020-03-16   7 120  48  52  19  18  23  17  17   6  10   3   5   4   2   0 #>    2020-03-23  23  76  70  18  27  20  16  15  11   6   2   2   3   1   2   1 #>    2020-03-30  15 103  38  25  24   8  10   8   5   4   7   1   1   2   0   1 #>    2020-04-06  24  79  63  30  23  21   7  12   3   4   0   3   1   1   1   1 #>    2020-04-13  17 111  80  22  15  10  16   3   5   5   1   1   2   2   4   1 #>    2020-04-20  22 143  51  26  17  16   4  12   7   4   0   0   3   2   1   0 #>    2020-04-27  39 106  87  24   9   5   8   6   1   2   4   1   3   2   1   0 #>    2020-05-04  37 154  68  32   8  12  10  10   3   3   2   1   3   0   2   0 #>    2020-05-11  31 153  80  20  22  15  17   3   4   0   3   3   0   1   1   3 #>    2020-05-18  41 154  70  67  24  15  11   5   6   3   6   0   0   3   2   1 #>    2020-05-25  34 174 191  98  35  27  18  10  15  11   1   4   1   2   5   5 #>    2020-06-01  22 240 232  62  49  25  11  16  19   4   3   3   1   2   2   5 #>    2020-06-08  44 355 252 119  55  19  18  21   4   9   1   6   8   3   3   0 #>    2020-06-15  61 363 252  94  40  30  39   9   8   3   4  10   5   6   4   2 #>    2020-06-22  84 401 268 139  87  93  10  20   9   7   9   9   6   1   2   2 #>    2020-06-29  53 338 309 120  83  18  15   8  11   5   5   5   2   3   2   3 #>    2020-07-06  51 394 265  96  44  36  12  10   9  14   4   4   9   4   3   2 #>    2020-07-13  51 351 195  69  46  25  14  15  13   7   4   7   4   4   2   1 #>    2020-07-20  62 216 125  83  48  35  38  17  11  11   8  13  14   2   1   1 #>    2020-07-27  22 171 152  53  40  33  31  15   6  17  13  15   4   0   2   2 #>    2020-08-03  43 222  96  78  44  41  29   7  20  15  13   7   2   0   3   5 #>    2020-08-10  43 185 127  63  48  29  13  12  18  27   4   2   6   1   3   1 #>    2020-08-17  19 184 137  91  34  17  17  18  16  17   2   8   1   3   0   7 #>    2020-08-24  30 183 166  56  26  17  19  23  17   7  14   6   7   2   4   2 #>    2020-08-31  31 162 115  60  17  23  29  10   7  10   4   3   5  13   0   2 #>    2020-09-07  27 170 139  55  16  24  18   6  14   6   4   6   7   2   1   1 #>    2020-09-14  31 176 103  46  33  29  10  17   8   7   6   8   4   1   1   1 #>    2020-09-21  32 195  88  60  39  16  26  20   3   9   9   6   0   2   2   3 #>    2020-09-28  35 146 116  41  31  35  27   8   4  12   4   2   1   2   1   1 #>    2020-10-05  33 128  75  43  33  27  13   7   3   5   0   0   1   1   2   5 #>    2020-10-12  38  98  63  60  44  20  11  12   6   3   1   4   0   0   2   0 #>    2020-10-19  24 105 129  87  24  23   9   9   5   2   3   4   2   2   1   4 #>    2020-10-26  24 163 138  53  48  15  25   5   6   8   4   7   9   3   3   2 #>    2020-11-02  37 189 130  84  27  48   7   6  10   7  10  13   4  12   6   6 #>    2020-11-09  27 166 155  55  75  12  12  16  10   8  17   9   6   8   8   5 #>    2020-11-16  34 177 133 109  34  20  31  15  10  23  15  14   6  11   3   4 #>    2020-11-23  18 141 213  53  44  92  34  30  36  18  13  10  16   8   4   4 #>    2020-11-30  24 201 111  80  88  47  35  37  24  19  15  14   1   7   6   3 #>    2020-12-07  30 133 133 186  74  58  50  25  16  13  15   6   8   5   5   5 #>    2020-12-14  21 101 224 115  75  77  53  26  26  28  24   9  12   8   8   2 #>    2020-12-21  10 131 226 109  92  77  50  27  29  19  13   7   5   2   3   7 #>    2020-12-28  20 184 168 125  71  70  31  42  18  14  11  10   5   7   7   4 #>    2021-01-04  25 166 206  83  89  44  38  28  17  11  13   5   8   8   7   3 #>    2021-01-11  22 190 131 103  55  64  23  28  13   7   5  12  12   7   5   8 #>    2021-01-18  34 121 112  79  47  26  15  19  16   7   8   9   5   3   5   2 #>    2021-01-25  28 177 126  97  53  40  30  19  12   7   9   6   7  22   1   0 #>    2021-02-01  27 135 115  86  36  30  36  15  12  12   4  10  10   6   2   4 #>    2021-02-08  19 159 190  89  52  44  25  26  21  15  12  13  10   7   4   3 #>    2021-02-15  36 169 177 121  58  42  41  34  25  16  26  16  15  10   5   6 #>    2021-02-22  28 268 306 174 118 126  97  35  36  42  25  24  21   5   8  16 #>    2021-03-01  39 245 282 291 211 115  72  70  57  46  40  28  21  18  16  24 #>    2021-03-08  32 192 403 355 177 138 101  75  73  45  25  26  38  32  43  11 #>    2021-03-15  21 171 319 257 157  97  77  49  42  29  28  40  33  30  18  12 #>    2021-03-22  14 205 298 197 102  91  41  49  33  39  35  24  28   7  16   5 #>    2021-03-29  17 174 228 168 108  68  54  33  21  33  48  30   8  12  15  16 #>    2021-04-05  27 136 275 195  70  60  28  30  37  26  22  12  20  13  10   5 #>    2021-04-12   8 200 259 143  82  29  30  44  32  28  19  20  18  10   4   4 #>    2021-04-19  22 174 243 122  78  39  53  39  24  14  39  29  11  12   4   5 #>    2021-04-26  13 160 240 159  66  80  48  27  23  44  26  13   5   7  11   4 #>    2021-05-03  27 162 219 163 203  95  53  37  39  31  29  15  13  11   4   8 #>    2021-05-10  19 152 178 234 115  93  47  62  32  29  16  14   9   4   6   6 #>    2021-05-17  22  97 258 136 133  45  76  45  37  27  24   8  10   3   4   0 #>    2021-05-24   6 163 170 173  62  87  44  45  27  18  15  12  12   4   4   1 #>    2021-05-31  18 118 164  93 105  71  58  25  20  18   7  10   6   4   1   5 #>    2021-06-07  13 122 169 146  78  66  60  30  18  13  16  10   6   4   2   6 #>    2021-06-14   8 128 139  83  71  50  46  34  10  19  15   7   0   2   2   1 #>    2021-06-21  20 115 135  86  71  56  35  13  12  22   9   6   3   2   2   2 #>    2021-06-28   9 123 143  94  58  52  35  37  24  21  12   5   5   1   1   1 #>    2021-07-05  12 117 132  93  43  38  38  26  21  13   7   7   4   1   2   0 #>    2021-07-12  22 125 113  46  32  47  22  22  14   7   3   3   1   1   2   4 #>    2021-07-19  21 123  87  58  62  32  23  21   2   6   4   2   3   1   2   2 #>    2021-07-26  20  95 105  85  43  38  32  10  11   3   2   1   1   5   5   0 #>    2021-08-02  19 113  98  45  52  55  11   9   4   1   5   1   7   2   1   2 #>    2021-08-09   8 115  82  71  51  15  17   6   2   4   4   6   5   0   2   0 #>    2021-08-16  13  74  91  66  36  31   6   2   5   5   4   1   3   1   1   0 #>    2021-08-23  13  51 127  55  26  15   3   7   2  12   6   3   3   5   0   0 #>    2021-08-30  13  97  68  38  30  10  15   9   7   9   3   7   2   0   0   0 #>    2021-09-06  20 117  68  30  13  29  14  19  14   5   5   2   1   2   1   0 #>    2021-09-13  17 105  44  38  41  12  19  32   6  10   5   1   1   0   0   0 #>    2021-09-20  11  83  71  55  13  33  23   8  20   3   1   2   3   1   2   1 #>    2021-09-27   5  65  79  39  28  23   7  10   4   3   1   0   2   1   2   0 #>    2021-10-04  10  77  56  57  43  15  19   4   2   0   1  10   4   0   0   0 #>    2021-10-11   3  48  97  52  37  31  11   8   2   3   5   5   1   0   3   3 #>    2021-10-18   4  41  81  35  50  13   8   7  10  17   8   2   0   3   7   3 #>    2021-10-25   6  84  63  56  26   9  19  15  11  12   3   1   1   9   7   1 #>    2021-11-01  10  59  50  31  18  23   9  22   9   1   0   1   4   2   1   0 #>    2021-11-08   6  74  50  28  26  36  22  15   2   1   2  11   7   2   1   2 #>    2021-11-15   6  80  61  41  37  25  21  10   5   4  23   7   3   3   4   0 #>    2021-11-22   4  36  47  49  25  32  17  16   5  24  13   7   5   5   0   2 #>    2021-11-29   5  70  77  27  58  19   9  10  30  18   9   8   5   2   4   1 #>    2021-12-06   9  87  85  72  39  22  16  16  38   7  10   8   6   5   2  21 #>    2021-12-13  12  78 170  87  41  27  57  50  24  27  13  12   7   5  11   0 #>    2021-12-20   6 113 128  63  54 100  85  33  25  25  12  13  15  12   0   0 #>    2021-12-27  20 106 114 109  98 113  72  69  27  19  18  13  14   0   0   0 #>    2022-01-03   7 105 152 104 135 109  83  66  27  30  18  20   1   0   0   0 #>    2022-01-10  10 139 101 135 103  90  70  51  17  28  33   1   0   0   0   0 #>    2022-01-17  15  98 121  77  69  79  29  37  28  28   0   0   0   0   0   0 #>    2022-01-24  11  87  99  73  76  38  36  40  22   0   0   0   0   0   0   0 #>    2022-01-31  16  76  77  62  37  30  35  35   0   0   0   0   0   0   0   0 #>    2022-02-07   7  85  59  45  69  47  29   0   0   0   0   0   0   0   0   0 #>    2022-02-14  20  52  72  44  27  46   0   0   0   0   0   0   0   0   0   0 #>    2022-02-21  12  63  48  40  52   0   0   0   0   0   0   0   0   0   0   0 #>    2022-02-28  12  56  72  56   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-03-07  15  56  64   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-03-14  11  60   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-03-21   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>              Delay #> Date of Onset  16  17  18  19  20  21  22  23  24  25  26  27  28  29 #>    2019-12-23   0   1   2   0   0   0   0   0   0   0   0   0   0   0 #>    2019-12-30   0   0   1   0   0   0   0   0   0   0   0   0   0   0 #>    2020-01-06   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-01-13   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-01-20   0   0   0   1   0   0   0   0   0   0   0   0   0   0 #>    2020-01-27   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-02-03   0   0   0   0   1   0   0   0   0   0   0   0   0   0 #>    2020-02-10   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-02-17   0   0   0   0   0   0   0   2   0   0   0   0   0   0 #>    2020-02-24   0   0   0   1   0   0   1   0   0   0   0   0   0   0 #>    2020-03-02   1   1   0   0   0   0   0   0   0   0   0   0   0   0 #>    2020-03-09   0   1   0   0   0   2   1   1   2   0   0   0   1   0 #>    2020-03-16   1   0   1   1   2   0   0   1   0   0   0   0   0   0 #>    2020-03-23   1   0   1   1   1   0   3   1   1   0   0   0   0   0 #>    2020-03-30   1   0   0   0   0   2   0   2   0   1   0   0   0   0 #>    2020-04-06   0   1   1   1   0   0   1   0   0   0   0   0   1   0 #>    2020-04-13   0   0   0   2   2   0   1   1   1   0   0   0   1   0 #>    2020-04-20   1   0   0   0   1   0   0   1   0   0   2   1   0   1 #>    2020-04-27   1   0   1   0   0   0   0   1   1   0   1   0   1   0 #>    2020-05-04   0   1   1   0   0   1   1   1   1   0   0   0   0   0 #>    2020-05-11   2   2   2   1   1   1   4   0   0   0   1   1   2   1 #>    2020-05-18   2   2   0   2   1   4   0   0   0   1   2   2   1   0 #>    2020-05-25   4   1   1   0   1   1   0   2   0   2   0   2   2   0 #>    2020-06-01   0   4   0   1   1   2   2   0   3   1   1   1   1   0 #>    2020-06-08   1   2   2   1   1   1   2   0   1   0   1   0   0   0 #>    2020-06-15   6   1   1   1   2   1   0   0   3   0   0   0   1   2 #>    2020-06-22   2   0   2   2   0   0   1   2   0   0   0   0   0   0 #>    2020-06-29   1   1   0   1   0   1   1   0   0   0   1   0   0   0 #>    2020-07-06   1   2   2   2   1   1   0   0   0   0   0   0   0   0 #>    2020-07-13   1   2   2   1   5   0   0   1   0   1   0   1   2   2 #>    2020-07-20   1   3   3   5   1   1   0   1   0   1   0   0   2   2 #>    2020-07-27   4   4   5   2   0   0   0   0   1   0   2   0   0   2 #>    2020-08-03   1  13   1   0   0   2   0   3   2   0   2   0   3   1 #>    2020-08-10   9   3   0   1   0   0   0   1   1   2   1   3   0   0 #>    2020-08-17   1   0   1   2   1   1   1   3   0   0   2   1   0   0 #>    2020-08-24   0   0   0   0   0   1   1   5   0   3   0   0   0   2 #>    2020-08-31   0   0   1   0   0   0   0   3   2   0   1   0   1   0 #>    2020-09-07   1   1   0   0   2   0   0   1   2   0   0   0   0   0 #>    2020-09-14   2   1   1   1   2   0   2   0   0   1   3   0   1   0 #>    2020-09-21   1   4   2   4   4   6   0   0   2   1   0   1   1   0 #>    2020-09-28   2   3   5   1   1   3   0   1   0   2   0   0   0   0 #>    2020-10-05   2   2   7   2   1   0   0   1   0   0   0   0   0   0 #>    2020-10-12   5   2   4   0   0   0   0   0   1   1   1   1   0   1 #>    2020-10-19   2   1   3   0   2   0   0   0   0   0   0   0   1   0 #>    2020-10-26  10   1   3   4   0   1   0   1   1   0   0   0   0   0 #>    2020-11-02   8   5   3   1   1   0   1   1   0   1   1   0   2   1 #>    2020-11-09   6   2   3   0   0   2   2   3   2   1   2   0   0   0 #>    2020-11-16   8   5   0   0   1   3   3   2   1   0   2   0   0   3 #>    2020-11-23   7   1   3   0   3   2   4   3   2   1   1   0   0   0 #>    2020-11-30   0   0   3   2   4   4   1   2   3   1   2   1   4   2 #>    2020-12-07   3   4   2   4   4   2   0   3   0   0   0   1   1   0 #>    2020-12-14   2   4   7   2   4   0   3   0   3   1   3   1   0   2 #>    2020-12-21   3   2   5   2   2   3   1   2   0   0   2   3   0   2 #>    2020-12-28   8   6   1   1   3   2   2   3   1   0   1   0   0   0 #>    2021-01-04   8   2   0   1   0   1   1   1   0   1   0   0   1   0 #>    2021-01-11   3   1   5   0   2   1   1   2   0   1   0   0   1   0 #>    2021-01-18   0   3   1   2   3   1   0   0   0   0   0   0   0   0 #>    2021-01-25   4   1   2   2   0   0   3   0   0   1   0   1   0   1 #>    2021-02-01   2   3   6   1   1   0   1   2   0   0   0   0   0   0 #>    2021-02-08   2   6   2   2   3   1   0   0   1   2   0   1   0   0 #>    2021-02-15   4   1   4   1   1   2   0   0   0   0   2   0   0   0 #>    2021-02-22  11   7   7   1   4   2   2   2   3   1   1   1   0   0 #>    2021-03-01   9  10   4   1   1   3   3   0   0   1   0   3   1   1 #>    2021-03-08  14  13   6   1   3   6   1   4   1   2   0   0   4   0 #>    2021-03-15  12  20   7   4   3   0   0   4   1   1   1   0   1   0 #>    2021-03-22  13   4   4   4   1   6   4   1   4   1   0   1   0   0 #>    2021-03-29  12   4   4   0   1   1   2   2   0   1   1   0   0   0 #>    2021-04-05   4   3   0   4   4   0   1   2   1   0   0   0   0   1 #>    2021-04-12   7   1   2   2   0   2   1   1   1   0   0   0   2   0 #>    2021-04-19   5   9   3   1   1   0   2   1   0   1   0   2   2   0 #>    2021-04-26   8   5   4   1   1   1   1   0   1   0   0   0   1   1 #>    2021-05-03   5   4   3   1   1   1   0   1   0   1   0   2   0   0 #>    2021-05-10   5   4   4   2   1   0   1   1   2   1   2   0   1   0 #>    2021-05-17   6   7   2   2   0   0   2   0   0   0   0   0   0   0 #>    2021-05-24   5   0   3   1   0   0   1   0   0   2   0   0   0   0 #>    2021-05-31   1   4   1   0   4   1   1   2   1   0   0   0   0   0 #>    2021-06-07   1   0   6   1   0   1   0   1   1   0   0   0   0   0 #>    2021-06-14   1   3   0   2   1   2   0   0   0   1   0   0   2   0 #>    2021-06-21   0   1   1   1   6   1   0   0   0   1   0   2   0   0 #>    2021-06-28   1   1   1   4   1   0   0   0   0   0   0   0   0   0 #>    2021-07-05   4   1   1   0   1   0   0   0   0   0   0   0   0   1 #>    2021-07-12   2   3   1   0   0   0   0   0   0   0   0   0   2   0 #>    2021-07-19   2   0   0   0   0   0   2   0   1   0   1   0   0   0 #>    2021-07-26   1   1   0   0   0   0   1   0   1   0   0   0   0   0 #>    2021-08-02   0   1   0   0   0   0   0   0   0   2   0   1   1   0 #>    2021-08-09   1   1   0   0   0   2   1   2   0   0   0   0   0   1 #>    2021-08-16   1   0   1   0   0   0   1   0   2   1   0   1   1   0 #>    2021-08-23   0   0   0   0   0   2   1   1   0   0   1   0   1   2 #>    2021-08-30   0   0   0   0   0   2   0   2   0   0   2   0   2   1 #>    2021-09-06   3   0   0   0   2   0   0   0   0   2   0   0   1   0 #>    2021-09-13   0   0   0   0   2   0   0   1   1   0   0   1   0   0 #>    2021-09-20   0   0   0   4   0   0   3   1   0   0   1   0   0   0 #>    2021-09-27   0   0   0   1   0   0   0   1   4   1   0   0   0   0 #>    2021-10-04   1   1   1   1   0   0   0   0   4   0   0   0   0   0 #>    2021-10-11   2   1   0   0   0   2   1   1   0   0   0   0   0   0 #>    2021-10-18   1   0   0   0   2   0   1   0   0   0   0   0   0   0 #>    2021-10-25   1   1   1   0   0   1   0   0   0   0   0   0   0   0 #>    2021-11-01   1   0   0   0   1   0   0   0   0   0   0   0   0   0 #>    2021-11-08   0   1   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-11-15   1   1   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-11-22   1   1   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-11-29   5   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-12-06   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-12-13   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-12-20   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2021-12-27   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-01-03   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-01-10   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-01-17   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-01-24   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-01-31   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-02-07   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-02-14   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-02-21   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-02-28   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-03-07   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-03-14   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #>    2022-03-21   0   0   0   0   0   0   0   0   0   0   0   0   0   0 library(ggplot2)  data_by_week <- nowcasting_bh_no_age$data |>   ungroup() |>    filter(date_onset >= (max(date_onset)-270))  nowcasting_bh_no_age$total |>    filter(dt_event >= (max(dt_event)-270)) |>    ggplot(aes(x = dt_event, y = Median, col = 'Nowcasting')) +   geom_line(data = data_by_week, aes(date_onset, y = observed, col = 'Observed'))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = NA), alpha = 0.2, show.legend = F)+   geom_line()+   theme_bw()+   theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90)) +   scale_color_manual(values = c('grey50', 'black'), name = '')+   scale_x_date(date_breaks = '2 weeks', date_labels = '%V/%y', name = 'Date in Weeks')+   labs(x = '', y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/articles/structured_data.html","id":"structured-data-age","dir":"Articles","previous_headings":"","what":"Structured data, Age","title":"Structured data","text":"structured data nowcasting_inla() fits Negative binomial distribution cases count time \\(t\\) delay \\(d\\). Differently, non-structured case model now gives random effects delay distribution time distribution age-class chosen user break data. model form now: \\[\\begin{equation}Y_{t,d,} \\sim  NegBinom(\\lambda_{t,d,}, \\phi), \\\\ \\log(\\lambda_{t,d,}) =  \\alpha_a + \\beta_{t,} + \\gamma_{d,}, \\\\ \\quad t=1,2,\\ldots,T, \\\\ d=1,2,\\ldots,D, \\\\ =1,2,\\ldots,, \\end{equation}\\] age class, \\(\\), intercept \\(\\alpha_a\\) following Gaussian distribution large variance, time-age random effects, \\(\\beta_{t,}\\), follow joint multivariate Gaussian distribution separable variance components independent Gaussian term age classes precision \\(\\tau_{age,\\beta}\\) second order random walk term time precision \\(\\tau_{\\beta}\\). Analogously, delay-age random effects, \\(\\gamma_{d,}\\), follow joint multivariate Gaussian distribution separable variance components independent Gaussian term age classes precision \\(\\tau_{age,\\gamma}\\) first order random walk term time precision \\(\\tau_{\\gamma}\\). model completed INLA default prior distributions \\(\\phi\\), \\(\\tau_{age,\\beta}\\), \\(\\tau_{age,\\gamma}\\), \\(\\tau_{\\beta}\\) \\(\\tau_\\gamma\\). See nbinom, iid, rw1 rw2 INLA help pages. new model corrects delay taking account effects age classes interactions age class time also delay. Now model needs flag indicating column dataset used break data age classes age classes split. given parameters age_col bins_age. pass three additional parameters, data..week return epidemiological curve window action nowcasting estimate return.age inform desire nowcasting result two ways, total aggregation estimate age-stratified estimate. calling function following form: estimates returned nowcasting_inla form non-structured case. nowcasting estimates, returns data.frame posterior edian 50% 95% credible intervals, (LIb LSb) (LI LS) respectively.","code":"nowcasting_bh_age <- nowcasting_inla(dataset = sragBH,                                     bins_age = \"10 years\",                                    data.by.week = T,                                     date_onset = DT_SIN_PRI,                                     date_report = DT_DIGITA,                                    age_col = Idade) library(ggplot2)  dados_by_week <- nowcasting_bh_age$data |>    ungroup() |>    filter(date_onset >= (max(date_onset)-270))  nowcasting_bh_age$total |>    ggplot(aes(x = dt_event, y = Median, col = 'Median'))+   geom_line()+   geom_line(data = dados_by_week, aes(date_onset, y = observed))+   geom_ribbon(aes(ymin = LI, ymax = LS, col = 'IC'), alpha = 0.2)+   theme_bw()+   theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90))+   scale_color_manual(values = c('grey90', 'black'), name = '')+   scale_x_date(date_breaks = '2 weeks', date_labels = '%V/%y', name = 'Date in Weeks')+   labs(x = '', y = 'Nº Cases')"},{"path":"https://covid19br.github.io/nowcaster/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael Lopes. Author, maintainer. Leonardo Bastos. Author.","code":""},{"path":"https://covid19br.github.io/nowcaster/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lopes R, Bastos L (2022). nowcaster: Nowcaster. R package version 0.2.2, https://covid19br.github.io/nowcaster.","code":"@Manual{,   title = {nowcaster: Nowcaster},   author = {Rafael Lopes and Leonardo Bastos},   year = {2022},   note = {R package version 0.2.2},   url = {https://covid19br.github.io/nowcaster}, }"},{"path":"https://covid19br.github.io/nowcaster/index.html","id":"nowcaster","dir":"","previous_headings":"","what":"Nowcaster","title":"Nowcaster","text":"nowcaster R package “nowcasting” epidemiological time-series individual level data. Every single system notification intrinsic delay date onset event date report. nowcaster can estimate many counts epidemiological data interest (.e., daily cases deaths counts) fitting negative binomial model time steps delay onset date event, (.e., date first symptoms cases date occurrence death) date report (.e., date notification case death).","code":""},{"path":"https://covid19br.github.io/nowcaster/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Nowcaster","text":"proper INLA installation install nowcaster package simply run code R: problem installing, please refer next section dependencies package.","code":"devtools::install_github(\"https://github.com/covid19br/nowcaster\")"},{"path":"https://covid19br.github.io/nowcaster/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Nowcaster","text":"nowcaster based R-INLA INLA packages “Integrated Nested Laplace Approximation” algorithm Bayesian inference. INLA fast alternative others methods Bayesian inference like MCMC. introduction INLA can found . nowcaster built epidemiological emergency use, constructed Brazilian Severe Acute Respiratory Illness (SARI) surveillance system (SIVEP-Gripe), time Covid-19 pandemic. installing package certify active installation INLA, can run following code: want detail possible installations INLA, please refer official page package.","code":"install.packages(\"INLA\",                  repos=c(getOption(\"repos\"),                          INLA=\"https://inla.r-inla-download.org/R/stable\"),                   dep=TRUE)"},{"path":"https://covid19br.github.io/nowcaster/index.html","id":"similar-initiatives","dir":"","previous_headings":"","what":"Similar Initiatives","title":"Nowcaster","text":"alternative packages, can produce nowcasting estimation, options: Epinow2 Surveillance","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":null,"dir":"Reference","previous_headings":"","what":"Dados_w — dados.w","title":"Dados_w — dados.w","text":"Dados_w","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dados_w — dados.w","text":"","code":"dados.w(   dataset,   trim.data,   bins_age = c(\"SI-PNI\", \"10 years\", \"5 years\", bins_age),   date_onset,   date_report,   age_col )"},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dados_w — dados.w","text":"dataset dataset formatted data week trim.data much trim data? bins_age Bins age cu data, parsing nowcasting_inla age_col Age column  cut data age classes","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dados_w — dados.w","text":"Data weeks","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — dados.w_no_age","title":"Title — dados.w_no_age","text":"Title","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — dados.w_no_age","text":"","code":"dados.w_no_age(dataset, trim.data, date_onset, date_report)"},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — dados.w_no_age","text":"dataset dataset formatted data week trim.data much trim data?","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/dados.w_no_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — dados.w_no_age","text":"Data weeks","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/data.w.html","id":null,"dir":"Reference","previous_headings":"","what":"data.w — data.w","title":"data.w — data.w","text":"Function put data format proper nowcasting estimation, use maximum data present last week parsed estimation. ======= Function put data format proper nowcasting estimation,  use maximum data present last week parsed estimation.  >>>>>>> dev Makes account maximum days per week used.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/data.w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data.w — data.w","text":"","code":"data.w(   dataset,   trim.data,   bins_age = c(\"SI-PNI\", \"10 years\", \"5 years\", bins_age),   date_onset,   date_report,   age_col,   K = 0,   silent = F )"},{"path":"https://covid19br.github.io/nowcaster/reference/data.w.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data.w — data.w","text":"dataset dataset formatted data week trim.data much trim data? bins_age Bins age cu data, parsing nowcasting_inla age_col Age column  cut data age classes K much weeks forecast ahead? Default K 0, forecasting ahead","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/data.w.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data.w — data.w","text":"Data weeks format, maximum dates last week used","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/reference/data.w_no_age.html","id":null,"dir":"Reference","previous_headings":"","what":"data.w_no_age — data.w_no_age","title":"data.w_no_age — data.w_no_age","text":"Function put data format proper nowcasting estimation, use maximum data present last week parsed estimation. ======= Function put data format proper nowcasting estimation,  use maximum data present last week parsed estimation.  >>>>>>> dev Makes account maximum days per week used. age structure.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/data.w_no_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data.w_no_age — data.w_no_age","text":"","code":"data.w_no_age(dataset, trim.data, date_onset, date_report, K = 0, silent = F)"},{"path":"https://covid19br.github.io/nowcaster/reference/data.w_no_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data.w_no_age — data.w_no_age","text":"dataset dataset formatted data week trim.data much trim data? K much weeks forecast ahead? Default K 0, forecasting ahead","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/data.w_no_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data.w_no_age — data.w_no_age","text":"Data weeks format, maximum dates last week used","code":""},{"path":[]},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting.summary — nowcasting.summary","title":"nowcasting.summary — nowcasting.summary","text":"Summarizing easy managable 'list' object, wrapper function Function summarize output posteriors generated workhorse functions, nowcasting_no_age nowcasting_age","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting.summary — nowcasting.summary","text":"","code":"nowcasting.summary(trajetory, age = F)"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting.summary — nowcasting.summary","text":"age age data? Default FALSE, TRUE columns age class, fx_etaria e fx_etaria.num trajectory Trajectories summarized, trajectory sample, Time, dt_event Y columns.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nowcasting.summary — nowcasting.summary","text":"list 2 elements summarized grouped , 'Median', 'LS' upper limit, 95% CI 'LI' lower limit, 95% CI 'LSb' upper limit, 50% CI 'LIb' lower limit, 50% CI","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting_age — nowcasting_age","title":"nowcasting_age — nowcasting_age","text":"Nowcasting estimation age strcuture data, wrraper 'INLA' model Run INLA model structured data age-class data format delay-triangle","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting_age — nowcasting_age","text":"","code":"nowcasting_age(dataset)"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting_age — nowcasting_age","text":"dataset data pre formatted age classes delays week cases, delay triangle format","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nowcasting_age — nowcasting_age","text":"Trajectories inner 'INLA' model","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting_inla — nowcasting_inla","title":"nowcasting_inla — nowcasting_inla","text":"function estimate amount events already started yet notified. main use estimate many cases outbreak already started onset date symptons yet notified. nowcasting_inla, fits statistical distribution empirical distribution time delay onset date report date.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting_inla — nowcasting_inla","text":"","code":"nowcasting_inla(   dataset,   bins_age = \"SI-PNI\",   trim.data = 0,   Dmax = 15,   wdw = 30,   age_col,   date_onset,   date_report,   data.by.week = FALSE,   silent = F,   K = 0,   trajectories = F,   zero_inflated = F,   ... )"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting_inla — nowcasting_inla","text":"dataset Dataset least 2 columns, date onset, date report. can dataset 3 columns, two dates columns said another one stratum column, data stratified, usually age. bins_age Age bins nowcasting, receive vector age bins, options , \"SI-PNI\", \"10 years\", \"5 years\". Default \"SI-PNI\". trim.data (weeks) Date trimmed data base, days. Default 0 days. Dmax (weeks) Window dates estimation act, .e., till many past weeks nowcasting estimate. Default 15 weeks. wdw (weeks) maximum amount weeks Nowcasting use estimation. Default 30 weeks. age_col Column ages date_onset Column dates onset events, normally date onset first symptoms cases date_report Column dates report event, normally date digitation notification cases data..week returned whole time-series data. Default FALSE. silent Deprecated warnings turned ? Default TRUE. K (weeks) much weeks forecast ahead? Default K 0, forecasting ahead trajectories Returns trajectories estimated inner 'INLA' model zero_inflated Experimental non-structured models, fit model deals zero-inflated data. Default FALSE. age_col missing flag ignored. ... list parameters functions return.age Deprecated estimate Age returned. Default TRUE.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nowcasting_inla — nowcasting_inla","text":"list 2 elements, element data.frame nowcasting estimation, 'Total', 'data' time-series wdw . 'age_col' parsed, add thrid element age estimation 'age' . 'trajectories' = TRUE, add forth element returned trajectories 'inla'.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"nowcasting_inla — nowcasting_inla","text":"","code":"# Loading Belo Horizonte SARI dataset data(sragBH) nowcasting_inla(dataset = sragBH,                 date_onset = DT_SIN_PRI,                 date_report = DT_DIGITA,                 silent = T) #> Joining, by = \"date_onset\" #> Joining, by = c(\"date_onset\", \"delay\", \"Time\") #> $total #> # A tibble: 15 × 7 #>     Time dt_event   Median    LI    LS   LIb   LSb #>    <int> <date>      <dbl> <dbl> <dbl> <dbl> <dbl> #>  1    17 2021-12-13   625   621   632.   623  627  #>  2    18 2021-12-20   695   687   707    692  699  #>  3    19 2021-12-27   812   800   829    807  817  #>  4    20 2022-01-03   886   872   906.   881  893  #>  5    21 2022-01-10   818.  799   845    810  826  #>  6    22 2022-01-17   631   609   659    623  640  #>  7    23 2022-01-24   540   517   571.   531  550  #>  8    24 2022-01-31   434   410   469.   425  445  #>  9    25 2022-02-07   422.  393   462.   411  435. #> 10    26 2022-02-14   357   321   409.   343  373  #> 11    27 2022-02-21   336   292.  394    319  355  #> 12    28 2022-02-28   342   288   426.   323  364  #> 13    29 2022-03-07   313   248.  408    286  339  #> 14    30 2022-03-14   278   192   427.   246  322  #> 15    31 2022-03-21   234   120   445.   187  288  #>"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":null,"dir":"Reference","previous_headings":"","what":"nowcasting_no_age — nowcasting_no_age","title":"nowcasting_no_age — nowcasting_no_age","text":"Nowcasting estimation age strcuture data, wrapper 'INLA' model Run INLA model non-structured data, data format delay-triangle","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nowcasting_no_age — nowcasting_no_age","text":"","code":"nowcasting_no_age(dataset) nowcasting_no_age(dados.age, zero_inflated)"},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nowcasting_no_age — nowcasting_no_age","text":"zero_inflated zero-inflated model dataset data pre formatted age classes delays week cases, delay triangle format","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/nowcasting_no_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nowcasting_no_age — nowcasting_no_age","text":"Trajectories inner 'INLA' model","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/slope.estimate.quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Slope.estimate — slope.estimate.quant","title":"Slope.estimate — slope.estimate.quant","text":"Slope.estimate","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/slope.estimate.quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slope.estimate — slope.estimate.quant","text":"","code":"slope.estimate.quant(end.week, trajectories, window = 3)"},{"path":"https://covid19br.github.io/nowcaster/reference/slope.estimate.quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slope.estimate — slope.estimate.quant","text":"end.week weeks end week wanted slope estimate trajectories Data.frame predicted nowcasted estimate window weeks Window much time used calculate slope estimate","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/slope.estimate.quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slope.estimate — slope.estimate.quant","text":"slope estimate","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":null,"dir":"Reference","previous_headings":"","what":"SARI data from Belo Horizonte — sragBH","title":"SARI data from Belo Horizonte — sragBH","text":"dataset containing stuff need","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SARI data from Belo Horizonte — sragBH","text":"","code":"sragBH"},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SARI data from Belo Horizonte — sragBH","text":"data frame 65404 rows 7 variables: DT_SIN_PRI Date onset symptoms. DT_DIGITA Date recording. Idade Age years.","code":""},{"path":"https://covid19br.github.io/nowcaster/reference/sragBH.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SARI data from Belo Horizonte — sragBH","text":"https://opendatasus.saude.gov.br/","code":""}]
